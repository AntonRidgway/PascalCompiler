1	program	61	0
1	test	6	004B8580
1	(	11	0
1	input	6	004B8598
1	,	15	0
1	output	6	004B85B0
1	)	12	0
1	;	8	0
2	var	64	0
2	a	6	004B85C8
2	:	7	0
2	integer	57	0
2	;	8	0
3	var	64	0
3	b	6	004B85E0
3	:	7	0
3	real	62	0
3	;	8	0
4	var	64	0
4	c	6	004B85F8
4	:	7	0
4	array	50	0
4	[	13	0
4	1	16	0
4	..	10	0
4	2	16	0
4	]	14	0
4	of	59	0
4	integer	57	0
4	;	8	0
6	function	55	0
6	fun1	6	004B8628
6	(	11	0
6	x	6	004B8640
6	:	7	0
6	integer	57	0
6	;	8	0
6	y	6	004B8658
6	:	7	0
6	real	62	0
6	;	8	0
7	z	6	004B8670
7	:	7	0
7	array	50	0
7	[	13	0
7	1	16	0
7	..	10	0
7	2	16	0
7	]	14	0
7	of	59	0
7	integer	57	0
7	;	8	0
8	q	6	004B8688
8	:	7	0
8	real	62	0
8	)	12	0
8	:	7	0
8	integer	57	0
8	;	8	0
9	var	64	0
9	d	6	004B86A0
9	:	7	0
9	integer	57	0
9	;	8	0
10	begin	51	0
11	a	6	004B85C8
11	:=	4	0
11	2	16	0
11	;	8	0
12	z	6	004B8670
12	[	13	0
12	a	6	004B85C8
12	]	14	0
12	:=	4	0
12	4	16	0
12	;	8	0
13	c	6	004B85F8
13	[	13	0
13	2	16	0
13	]	14	0
13	:=	4	0
13	3	16	0
13	;	8	0
14	fun1	6	004B8628
14	:=	4	0
14	c	6	004B85F8
14	[	13	0
14	1	16	0
14	]	14	0
15	end	54	0
15	;	8	0
17	function	55	0
17	fun2	6	004B86D0
17	(	11	0
17	x	6	004B8640
17	:	7	0
17	integer	57	0
17	;	8	0
17	y	6	004B8658
17	:	7	0
17	integer	57	0
17	)	12	0
17	:	7	0
17	real	62	0
17	;	8	0
18	var	64	0
18	e	6	004B86E8
18	:	7	0
18	real	62	0
18	;	8	0
20	function	55	0
20	fun3	6	004B8718
20	(	11	0
20	n	6	004B8730
20	:	7	0
20	integer	57	0
20	;	8	0
20	z	6	004B8670
20	:	7	0
20	real	62	0
20	)	12	0
20	:	7	0
20	integer	57	0
20	;	8	0
21	var	64	0
21	e	6	004B86E8
21	:	7	0
21	integer	57	0
21	;	8	0
22	begin	51	0
23	a	6	004B85C8
23	:=	4	0
23	e	6	004B86E8
23	;	8	0
24	e	6	004B86E8
24	:=	4	0
24	c	6	004B85F8
24	[	13	0
24	e	6	004B86E8
24	]	14	0
24	;	8	0
25	fun3	6	004B8718
25	:=	4	0
25	3	16	0
26	end	54	0
26	;	8	0
28	begin	51	0
29	a	6	004B85C8
29	:=	4	0
29	fun1	6	004B8628
29	(	11	0
29	x	6	004B8640
29	,	15	0
29	e	6	004B86E8
29	,	15	0
29	c	6	004B85F8
29	,	15	0
29	b	6	004B85E0
29	)	12	0
29	;	8	0
30	x	6	004B8640
30	:=	4	0
30	fun3	6	004B8718
30	(	11	0
30	c	6	004B85F8
30	[	13	0
30	1	16	0
30	]	14	0
30	,	15	0
30	e	6	004B86E8
30	)	12	0
30	;	8	0
31	e	6	004B86E8
31	:=	4	0
31	e	6	004B86E8
31	+	1	1
31	4.44	17	0
31	;	8	0
32	a	6	004B85C8
32	:=	4	0
32	(	11	0
32	a	6	004B85C8
32	mod	2	4
32	y	6	004B8658
32	)	12	0
32	div	2	3
32	x	6	004B8640
32	;	8	0
33	while	65	0
33	(	11	0
33	(	11	0
33	a	6	004B85C8
33	>=	3	4
33	4	16	0
33	)	12	0
33	and	2	5
33	(	11	0
33	(	11	0
33	b	6	004B85E0
33	<=	3	1
33	e	6	004B86E8
33	)	12	0
34	or	1	3
34	(	11	0
34	not	58	0
34	(	11	0
34	a	6	004B85C8
34	=	3	6
34	c	6	004B85F8
34	[	13	0
34	a	6	004B85C8
34	]	14	0
34	)	12	0
34	)	12	0
34	)	12	0
34	)	12	0
34	do	52	0
35	begin	51	0
36	a	6	004B85C8
36	:=	4	0
36	c	6	004B85F8
36	[	13	0
36	a	6	004B85C8
36	]	14	0
36	+	1	1
36	1	16	0
37	end	54	0
37	;	8	0
38	fun2	6	004B86D0
38	:=	4	0
38	2.5	17	0
39	end	54	0
39	;	8	0
41	begin	51	0
42	b	6	004B85E0
42	:=	4	0
42	fun2	6	004B86D0
42	(	11	0
42	c	6	004B85F8
42	[	13	0
42	4	16	0
42	]	14	0
42	,	15	0
42	c	6	004B85F8
42	[	13	0
42	5	16	0
42	]	14	0
42	)	12	0
42	;	8	0
43	b	6	004B85E0
43	:=	4	0
43	fun2	6	004B86D0
43	(	11	0
43	c	6	004B85F8
43	[	13	0
43	4	16	0
43	]	14	0
43	,	15	0
43	2	16	0
43	)	12	0
43	;	8	0
44	if	56	0
44	(	11	0
44	a	6	004B85C8
44	<	3	3
44	2	16	0
44	)	12	0
44	then	63	0
44	a	6	004B85C8
44	:=	4	0
44	1	16	0
44	else	53	0
44	a	6	004B85C8
44	:=	4	0
44	a	6	004B85C8
44	+	1	1
44	2	16	0
44	;	8	0
45	if	56	0
45	(	11	0
45	b	6	004B85E0
45	>	3	5
45	4.2	17	0
45	)	12	0
45	then	63	0
45	a	6	004B85C8
45	:=	4	0
45	c	6	004B85F8
45	[	13	0
45	a	6	004B85C8
45	]	14	0
46	end	54	0
46	.	9	0
46	$	19	0
